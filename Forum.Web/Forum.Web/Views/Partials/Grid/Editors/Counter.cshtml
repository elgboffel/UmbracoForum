@inherits UmbracoViewPage<LeBlenderModel>
@using Lecoati.LeBlender.Extension.Models
@using Datagraf.Web.Models.ComponentModels
@using Datagraf.Web.Models.ModelsBuilder
@using Umbraco.Web

@{
    Html.RequiresJs("https://cdnjs.cloudflare.com/ajax/libs/waypoints/4.0.0/jquery.waypoints.min.js", new { @defer = "" } )
        .RequiresJs("~/Content/components/counter-up/jquery.counterup.min.js", new { @defer = "" })
        .RequiresJs("~/scripts/app/counter.js", new { @defer = "" });

    foreach (var item in Model.Items)
    {
        @renderContent(item)
    }
}

@helper renderContent(LeBlenderValue content)
{
    var counterList = content.GetValue<IEnumerable<IPublishedContent>>("counter");

    if (counterList.Any())
    {
        <div class="counter-list">
                @foreach (var counter in counterList)
                {
                    @renderCounter(counter)
                }
        </div>
    }
}

@helper renderCounter(IPublishedContent counter)
{
    var number = counter.GetPropertyValue<string>("number");
    var numberValue = counter.GetPropertyValue<string>("numberValue");
    var text = counter.GetPropertyValue<string>("text");

    <div class="counter-list__item">
        @if (!string.IsNullOrEmpty(number))
        {
            @renderNumber(number, numberValue)
        }
        @if (!string.IsNullOrEmpty(text))
        {
            <div class="counter-list__text">@text</div>
        }
    </div>
}

@helper renderNumber(string number, string numberValue)
{

    var numberArray = number.Split(',', '.');

    <div class="counter-list__number">
        @*@for (var i = 0; i < numberArray.Count(); i++)
        {
            var item = numberArray.ElementAt(i);
            <span class="counter">@item</span>
            if (i < numberArray.Count() - 1)
            {
                if (number.Contains(","))
                {
                    <span>,</span>
                } else
                {
                    <span>.</span>
                }
            }
        }*@
        <span class="counter">@number</span>
        @Html.Raw(numberValue)
    </div>
}